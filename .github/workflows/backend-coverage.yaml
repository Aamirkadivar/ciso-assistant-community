name: Backend code coverage

on:
  pull_request:
    branches: ["main"]
    paths:
      - "backend/**"

env:
  GITHUB_WORKFLOW: github_actions

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./backend

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        working-directory: ${{env.working-directory}}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Create environment variables file
        working-directory: ${{env.working-directory}}
        run: |
          touch .env
          echo DJANGO_DEBUG='True' >> .env
          echo EMAIL_HOST=localhost >> .env
          echo EMAIL_PORT=1025 >> .env
          echo EMAIL_HOST_USER='' >> .env
          echo EMAIL_HOST_PASSWORD='' >> .env
          #echo EMAIL_USE_TLS=False >> .env
          echo DEFAULT_FROM_EMAIL='ciso-assistant@alsigo.net' >> .env
          echo CISO_ASSISTANT_SUPERUSER_EMAIL='' >> .env
          echo CISO_ASSISTANT_URL=http://127.0.0.1:5173 >> .env
      - name: Run migrations
        working-directory: ${{env.working-directory}}
        run: |
          export $(grep -v '^#' .env | xargs)
          python manage.py migrate
      - name: Run coverage
        working-directory: ${{env.working-directory}}
        run: |
          export $(grep -v '^#' .env | xargs)
          find . -path '*/tests/*' -and -name 'test*.py' -and -not -path "./venv/*" | xargs coverage run -m pytest
      - name: Display coverage report
        working-directory: ${{env.working-directory}}
        run: coverage report
