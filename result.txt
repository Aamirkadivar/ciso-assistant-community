============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.2.0, pluggy-1.5.0
django: version: 5.0.7, settings: ciso_assistant.settings (from ini)
rootdir: /home/soy/intuitem/asf_rm/backend
configfile: pytest.ini
plugins: django-4.8.0, html-4.1.1, metadata-3.1.1
collected 29 items

app_tests/api/test_api_requirement_nodes.py ...............FFFFFFFFFFFFF [ 96%]
F                                                                        [100%]

=================================== FAILURES ===================================
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Global_administrator] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463fe5dc0>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cccfad0>, 'admin_client': <rest_framework.test.APIClient object at 0x79d45ccc7350>, 'folder': <Folder: test>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-ADM'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:09.259459Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:09.297695Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:09.297885Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:09.299660Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mbd9f91c1-312c-4366-8829-50b3b63874af[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.313940Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mbd9f91c1-312c-4366-8829-50b3b63874af[0m [36muser_id[0m=[35mf0200dfe-69bf-42ff-992e-8319aa069ce4[0m
[2m2024-08-07T14:49:09.314674Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mb0c89bff-ace4-4b73-a70e-a9ffe5bfe15f[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.323493Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mb0c89bff-ace4-4b73-a70e-a9ffe5bfe15f[0m [36muser_id[0m=[35mf0200dfe-69bf-42ff-992e-8319aa069ce4[0m
[2m2024-08-07T14:49:09.323953Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:09.358140Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:09.358331Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.259459Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.297695Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.297885Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'bd9f91c1-312c-4366-8829-50b3b63874af', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.299660Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': 'f0200dfe-69bf-42ff-992e-8319aa069ce4', 'ip': '127.0.0.1', 'request_id': 'bd9f91c1-312c-4366-8829-50b3b63874af', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.313940Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'b0c89bff-ace4-4b73-a70e-a9ffe5bfe15f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.314674Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': 'f0200dfe-69bf-42ff-992e-8319aa069ce4', 'ip': '127.0.0.1', 'request_id': 'b0c89bff-ace4-4b73-a70e-a9ffe5bfe15f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.323493Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.323953Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.358140Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.358331Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stdout call -----------------------------
::: Getting Dependencies :::
::: Dependencies are ok :::
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:09.360692Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35mbfaa10a5-24a3-42d2-a9d2-8f074a098869[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.366040Z[0m [[32m[1minfo     [0m] [1mLoading library               [0m [[0m[1m[34mlibrary.utils[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mdefault_locale[0m=[35mTrue[0m [36mip[0m=[35m127.0.0.1[0m [36mlibrary[0m=[35m<StoredLibrary: NIST-CSF-1.1 - NIST CSF version 1.1>[0m [36mlocale[0m=[35men[0m [36mrequest_id[0m=[35mbfaa10a5-24a3-42d2-a9d2-8f074a098869[0m [36murn[0m=[35murn:intuitem:risk:library:nist-csf-1.1[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.471402Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35mbfaa10a5-24a3-42d2-a9d2-8f074a098869[0m [36muser_id[0m=[35mb61e5169-1008-48ed-bbe2-263578c33c39[0m
[2m2024-08-07T14:49:09.472137Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35mf25fb628-ab5e-44b5-9259-e5a712c8a4a1[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.474298Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35mf25fb628-ab5e-44b5-9259-e5a712c8a4a1[0m [36muser_id[0m=[35mb61e5169-1008-48ed-bbe2-263578c33c39[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'bfaa10a5-24a3-42d2-a9d2-8f074a098869', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.360692Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     library.utils:utils.py:596 {'urn': 'urn:intuitem:risk:library:nist-csf-1.1', 'locale': 'en', 'default_locale': True, 'library': <StoredLibrary: NIST-CSF-1.1 - NIST CSF version 1.1>, 'event': 'Loading library', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'bfaa10a5-24a3-42d2-a9d2-8f074a098869', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.366040Z', 'logger': 'library.utils', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': 'b61e5169-1008-48ed-bbe2-263578c33c39', 'ip': '127.0.0.1', 'request_id': 'bfaa10a5-24a3-42d2-a9d2-8f074a098869', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.471402Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'f25fb628-ab5e-44b5-9259-e5a712c8a4a1', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.472137Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': 'b61e5169-1008-48ed-bbe2-263578c33c39', 'ip': '127.0.0.1', 'request_id': 'f25fb628-ab5e-44b5-9259-e5a712c8a4a1', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.474298Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Global_administrator_outside_domain] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d4638476b0>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cdb9e20>, 'admin_client': <rest_framework.test.APIClient ob...0x79d45cc4b1a0>, 'folder': <Folder: test_outside_domain>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-ADM'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:09.548681Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:09.584630Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:09.584813Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:09.586760Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m80bce8a6-da9a-4592-87ab-0aa0e0a174fb[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.600558Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m80bce8a6-da9a-4592-87ab-0aa0e0a174fb[0m [36muser_id[0m=[35mb0b9c418-f138-4a8d-a4ec-eb8ca19fac77[0m
[2m2024-08-07T14:49:09.601343Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m015ec613-2032-4f2d-a6e2-167bcf0e24fc[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.610567Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m015ec613-2032-4f2d-a6e2-167bcf0e24fc[0m [36muser_id[0m=[35mb0b9c418-f138-4a8d-a4ec-eb8ca19fac77[0m
[2m2024-08-07T14:49:09.611334Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35meef34f8b-8374-4a57-8f55-7aac9d454723[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.625485Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35meef34f8b-8374-4a57-8f55-7aac9d454723[0m [36muser_id[0m=[35mb0b9c418-f138-4a8d-a4ec-eb8ca19fac77[0m
[2m2024-08-07T14:49:09.626227Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mbf1ebec4-ebb9-456a-bd0e-478bf8c0cf28[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.636688Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mbf1ebec4-ebb9-456a-bd0e-478bf8c0cf28[0m [36muser_id[0m=[35mb0b9c418-f138-4a8d-a4ec-eb8ca19fac77[0m
[2m2024-08-07T14:49:09.637223Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:09.675466Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:09.675635Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.548681Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.584630Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.584813Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '80bce8a6-da9a-4592-87ab-0aa0e0a174fb', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.586760Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': 'b0b9c418-f138-4a8d-a4ec-eb8ca19fac77', 'ip': '127.0.0.1', 'request_id': '80bce8a6-da9a-4592-87ab-0aa0e0a174fb', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.600558Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '015ec613-2032-4f2d-a6e2-167bcf0e24fc', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.601343Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': 'b0b9c418-f138-4a8d-a4ec-eb8ca19fac77', 'ip': '127.0.0.1', 'request_id': '015ec613-2032-4f2d-a6e2-167bcf0e24fc', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.610567Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'eef34f8b-8374-4a57-8f55-7aac9d454723', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.611334Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': 'b0b9c418-f138-4a8d-a4ec-eb8ca19fac77', 'ip': '127.0.0.1', 'request_id': 'eef34f8b-8374-4a57-8f55-7aac9d454723', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.625485Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'bf1ebec4-ebb9-456a-bd0e-478bf8c0cf28', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.626227Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': 'b0b9c418-f138-4a8d-a4ec-eb8ca19fac77', 'ip': '127.0.0.1', 'request_id': 'bf1ebec4-ebb9-456a-bd0e-478bf8c0cf28', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.636688Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.637223Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.675466Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.675635Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stdout call -----------------------------
::: Getting Dependencies :::
::: Dependencies are ok :::
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:09.677686Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m8a3584c5-8770-465b-b5a0-158041731ae0[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.682952Z[0m [[32m[1minfo     [0m] [1mLoading library               [0m [[0m[1m[34mlibrary.utils[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mdefault_locale[0m=[35mTrue[0m [36mip[0m=[35m127.0.0.1[0m [36mlibrary[0m=[35m<StoredLibrary: NIST-CSF-1.1 - NIST CSF version 1.1>[0m [36mlocale[0m=[35men[0m [36mrequest_id[0m=[35m8a3584c5-8770-465b-b5a0-158041731ae0[0m [36murn[0m=[35murn:intuitem:risk:library:nist-csf-1.1[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.785030Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m8a3584c5-8770-465b-b5a0-158041731ae0[0m [36muser_id[0m=[35m5ab1e40f-3187-4fb4-a79b-65626f61b081[0m
[2m2024-08-07T14:49:09.785709Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m015cb307-5f11-4c78-9f17-4b8c009b549e[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.787735Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m015cb307-5f11-4c78-9f17-4b8c009b549e[0m [36muser_id[0m=[35m5ab1e40f-3187-4fb4-a79b-65626f61b081[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '8a3584c5-8770-465b-b5a0-158041731ae0', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.677686Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     library.utils:utils.py:596 {'urn': 'urn:intuitem:risk:library:nist-csf-1.1', 'locale': 'en', 'default_locale': True, 'library': <StoredLibrary: NIST-CSF-1.1 - NIST CSF version 1.1>, 'event': 'Loading library', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '8a3584c5-8770-465b-b5a0-158041731ae0', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.682952Z', 'logger': 'library.utils', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '5ab1e40f-3187-4fb4-a79b-65626f61b081', 'ip': '127.0.0.1', 'request_id': '8a3584c5-8770-465b-b5a0-158041731ae0', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.785030Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '015cb307-5f11-4c78-9f17-4b8c009b549e', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.785709Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '5ab1e40f-3187-4fb4-a79b-65626f61b081', 'ip': '127.0.0.1', 'request_id': '015cb307-5f11-4c78-9f17-4b8c009b549e', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.787735Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Global_reader] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463847740>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cdb94c0>, 'admin_client': <rest_framework.test.APIClient object at 0x79d45cb60b30>, 'folder': <Folder: test>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-GAD'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:09.823940Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:09.858384Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:09.858556Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:09.860395Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m2b8c0dcf-d532-4248-a1cd-61ff936d18b9[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.875557Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m2b8c0dcf-d532-4248-a1cd-61ff936d18b9[0m [36muser_id[0m=[35ma262342d-928c-4549-8d50-16a01991776e[0m
[2m2024-08-07T14:49:09.876446Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m16e38f76-2076-43b4-a39e-c7f83def2e22[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.885877Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m16e38f76-2076-43b4-a39e-c7f83def2e22[0m [36muser_id[0m=[35ma262342d-928c-4549-8d50-16a01991776e[0m
[2m2024-08-07T14:49:09.886380Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:09.923012Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:09.923178Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.823940Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.858384Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.858556Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '2b8c0dcf-d532-4248-a1cd-61ff936d18b9', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.860395Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': 'a262342d-928c-4549-8d50-16a01991776e', 'ip': '127.0.0.1', 'request_id': '2b8c0dcf-d532-4248-a1cd-61ff936d18b9', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.875557Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '16e38f76-2076-43b4-a39e-c7f83def2e22', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.876446Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': 'a262342d-928c-4549-8d50-16a01991776e', 'ip': '127.0.0.1', 'request_id': '16e38f76-2076-43b4-a39e-c7f83def2e22', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.885877Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.886380Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.923012Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.923178Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:09.925098Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m010ecc13-af49-4f2c-93a3-5800e07d0138[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.929502Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m010ecc13-af49-4f2c-93a3-5800e07d0138[0m [36muser_id[0m=[35m6b6e1711-c840-43dd-9fe4-2427f9143e89[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:09.930176Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m1da6cf98-a7a8-4ea6-9cba-75e51ef14d74[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:09.932237Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m1da6cf98-a7a8-4ea6-9cba-75e51ef14d74[0m [36muser_id[0m=[35m6b6e1711-c840-43dd-9fe4-2427f9143e89[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '010ecc13-af49-4f2c-93a3-5800e07d0138', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.925098Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '6b6e1711-c840-43dd-9fe4-2427f9143e89', 'ip': '127.0.0.1', 'request_id': '010ecc13-af49-4f2c-93a3-5800e07d0138', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.929502Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '1da6cf98-a7a8-4ea6-9cba-75e51ef14d74', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.930176Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '6b6e1711-c840-43dd-9fe4-2427f9143e89', 'ip': '127.0.0.1', 'request_id': '1da6cf98-a7a8-4ea6-9cba-75e51ef14d74', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.932237Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Global_reader_outside_domain] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463846060>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cd92e70>, 'admin_client': <rest_framework.test.APIClient ob...0x79d45cb09580>, 'folder': <Folder: test_outside_domain>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-GAD'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:09.970729Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:10.013049Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.013228Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.015348Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m8d1af49b-0b7b-48c2-aa76-2a22b38fc63a[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.030737Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m8d1af49b-0b7b-48c2-aa76-2a22b38fc63a[0m [36muser_id[0m=[35m53395520-061c-4d4c-a394-1e6035d51b50[0m
[2m2024-08-07T14:49:10.031848Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m12046df5-6d74-47a1-85a7-725f0c23a80f[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.042395Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m12046df5-6d74-47a1-85a7-725f0c23a80f[0m [36muser_id[0m=[35m53395520-061c-4d4c-a394-1e6035d51b50[0m
[2m2024-08-07T14:49:10.043345Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m265dc0d3-c482-4aba-a99c-8f75f2a0d560[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.057609Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m265dc0d3-c482-4aba-a99c-8f75f2a0d560[0m [36muser_id[0m=[35m53395520-061c-4d4c-a394-1e6035d51b50[0m
[2m2024-08-07T14:49:10.058429Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m5f94849e-2fb6-4c1f-ae23-af1bd5c8b74f[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.068671Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m5f94849e-2fb6-4c1f-ae23-af1bd5c8b74f[0m [36muser_id[0m=[35m53395520-061c-4d4c-a394-1e6035d51b50[0m
[2m2024-08-07T14:49:10.069201Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:10.104362Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:10.104540Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:09.970729Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.013049Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.013228Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '8d1af49b-0b7b-48c2-aa76-2a22b38fc63a', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.015348Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '53395520-061c-4d4c-a394-1e6035d51b50', 'ip': '127.0.0.1', 'request_id': '8d1af49b-0b7b-48c2-aa76-2a22b38fc63a', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.030737Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '12046df5-6d74-47a1-85a7-725f0c23a80f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.031848Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '53395520-061c-4d4c-a394-1e6035d51b50', 'ip': '127.0.0.1', 'request_id': '12046df5-6d74-47a1-85a7-725f0c23a80f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.042395Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '265dc0d3-c482-4aba-a99c-8f75f2a0d560', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.043345Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '53395520-061c-4d4c-a394-1e6035d51b50', 'ip': '127.0.0.1', 'request_id': '265dc0d3-c482-4aba-a99c-8f75f2a0d560', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.057609Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '5f94849e-2fb6-4c1f-ae23-af1bd5c8b74f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.058429Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '53395520-061c-4d4c-a394-1e6035d51b50', 'ip': '127.0.0.1', 'request_id': '5f94849e-2fb6-4c1f-ae23-af1bd5c8b74f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.068671Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.069201Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.104362Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.104540Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:10.106474Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m6d3d2b2e-19b9-41c4-8f45-db78a7732cd8[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.110519Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m6d3d2b2e-19b9-41c4-8f45-db78a7732cd8[0m [36muser_id[0m=[35m6301bbe2-ca32-49dd-bb23-8acb0138d540[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:10.111145Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m1cab4efd-4894-410a-b85c-fd4f57b22e8c[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.113040Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m1cab4efd-4894-410a-b85c-fd4f57b22e8c[0m [36muser_id[0m=[35m6301bbe2-ca32-49dd-bb23-8acb0138d540[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '6d3d2b2e-19b9-41c4-8f45-db78a7732cd8', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.106474Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '6301bbe2-ca32-49dd-bb23-8acb0138d540', 'ip': '127.0.0.1', 'request_id': '6d3d2b2e-19b9-41c4-8f45-db78a7732cd8', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.110519Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '1cab4efd-4894-410a-b85c-fd4f57b22e8c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.111145Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '6301bbe2-ca32-49dd-bb23-8acb0138d540', 'ip': '127.0.0.1', 'request_id': '1cab4efd-4894-410a-b85c-fd4f57b22e8c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.113040Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Global_approver] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463847b60>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cd55730>, 'admin_client': <rest_framework.test.APIClient object at 0x79d45cc0e720>, 'folder': <Folder: test>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-GAP'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:10.147698Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:10.182962Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.183181Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.185724Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mcb4da8c0-65c2-4148-b5e7-c24dd01f715f[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.206851Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mcb4da8c0-65c2-4148-b5e7-c24dd01f715f[0m [36muser_id[0m=[35m6da2e24b-e416-4113-8832-1bbdeb723cb7[0m
[2m2024-08-07T14:49:10.207658Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m094c0ab2-f7d0-4f70-8c4f-f54c82ed004d[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.216901Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m094c0ab2-f7d0-4f70-8c4f-f54c82ed004d[0m [36muser_id[0m=[35m6da2e24b-e416-4113-8832-1bbdeb723cb7[0m
[2m2024-08-07T14:49:10.217386Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:10.251809Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:10.251981Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.147698Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.182962Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.183181Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'cb4da8c0-65c2-4148-b5e7-c24dd01f715f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.185724Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '6da2e24b-e416-4113-8832-1bbdeb723cb7', 'ip': '127.0.0.1', 'request_id': 'cb4da8c0-65c2-4148-b5e7-c24dd01f715f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.206851Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '094c0ab2-f7d0-4f70-8c4f-f54c82ed004d', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.207658Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '6da2e24b-e416-4113-8832-1bbdeb723cb7', 'ip': '127.0.0.1', 'request_id': '094c0ab2-f7d0-4f70-8c4f-f54c82ed004d', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.216901Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.217386Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.251809Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.251981Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:10.253964Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35mfc3b3852-662f-4565-bc20-137b048f5f26[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.258106Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35mfc3b3852-662f-4565-bc20-137b048f5f26[0m [36muser_id[0m=[35m1ee5df79-68cd-4439-b170-7eee9609142e[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:10.258818Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m355d1df5-4d51-4497-b6a9-b256c182cd22[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.260756Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m355d1df5-4d51-4497-b6a9-b256c182cd22[0m [36muser_id[0m=[35m1ee5df79-68cd-4439-b170-7eee9609142e[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'fc3b3852-662f-4565-bc20-137b048f5f26', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.253964Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '1ee5df79-68cd-4439-b170-7eee9609142e', 'ip': '127.0.0.1', 'request_id': 'fc3b3852-662f-4565-bc20-137b048f5f26', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.258106Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '355d1df5-4d51-4497-b6a9-b256c182cd22', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.258818Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '1ee5df79-68cd-4439-b170-7eee9609142e', 'ip': '127.0.0.1', 'request_id': '355d1df5-4d51-4497-b6a9-b256c182cd22', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.260756Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Global_approver_outside_domain] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463847bf0>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cdaefc0>, 'admin_client': <rest_framework.test.APIClient ob...0x79d45ccfb710>, 'folder': <Folder: test_outside_domain>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-GAP'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:10.297392Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:10.331369Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.331538Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.333363Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m18e8e7e0-de7e-4f3e-ae4b-0031508f5f93[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.347563Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m18e8e7e0-de7e-4f3e-ae4b-0031508f5f93[0m [36muser_id[0m=[35m40b56e54-eece-4568-bd56-5cb71313e7a0[0m
[2m2024-08-07T14:49:10.348339Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m2368f3d2-9f9d-4d85-87c9-bc28e4a34e6c[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.357715Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m2368f3d2-9f9d-4d85-87c9-bc28e4a34e6c[0m [36muser_id[0m=[35m40b56e54-eece-4568-bd56-5cb71313e7a0[0m
[2m2024-08-07T14:49:10.358462Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35ma1dd4b66-02f6-478b-b47f-7633ac29fa46[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.371792Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35ma1dd4b66-02f6-478b-b47f-7633ac29fa46[0m [36muser_id[0m=[35m40b56e54-eece-4568-bd56-5cb71313e7a0[0m
[2m2024-08-07T14:49:10.372485Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m98b4d429-c030-4a07-985d-b017fcbcf7da[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.382931Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m98b4d429-c030-4a07-985d-b017fcbcf7da[0m [36muser_id[0m=[35m40b56e54-eece-4568-bd56-5cb71313e7a0[0m
[2m2024-08-07T14:49:10.383480Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:10.421638Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:10.421822Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.297392Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.331369Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.331538Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '18e8e7e0-de7e-4f3e-ae4b-0031508f5f93', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.333363Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '40b56e54-eece-4568-bd56-5cb71313e7a0', 'ip': '127.0.0.1', 'request_id': '18e8e7e0-de7e-4f3e-ae4b-0031508f5f93', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.347563Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '2368f3d2-9f9d-4d85-87c9-bc28e4a34e6c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.348339Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '40b56e54-eece-4568-bd56-5cb71313e7a0', 'ip': '127.0.0.1', 'request_id': '2368f3d2-9f9d-4d85-87c9-bc28e4a34e6c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.357715Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'a1dd4b66-02f6-478b-b47f-7633ac29fa46', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.358462Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '40b56e54-eece-4568-bd56-5cb71313e7a0', 'ip': '127.0.0.1', 'request_id': 'a1dd4b66-02f6-478b-b47f-7633ac29fa46', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.371792Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '98b4d429-c030-4a07-985d-b017fcbcf7da', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.372485Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '40b56e54-eece-4568-bd56-5cb71313e7a0', 'ip': '127.0.0.1', 'request_id': '98b4d429-c030-4a07-985d-b017fcbcf7da', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.382931Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.383480Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.421638Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.421822Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:10.423807Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m6ce95422-863a-4643-b3ce-d8f10a999071[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.427998Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m6ce95422-863a-4643-b3ce-d8f10a999071[0m [36muser_id[0m=[35m7b1e579a-b92f-4b86-9b30-e09ceb3362f0[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:10.428682Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35madb4a969-7b52-48dd-8bc8-dd132f2f1c15[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.430648Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35madb4a969-7b52-48dd-8bc8-dd132f2f1c15[0m [36muser_id[0m=[35m7b1e579a-b92f-4b86-9b30-e09ceb3362f0[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '6ce95422-863a-4643-b3ce-d8f10a999071', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.423807Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '7b1e579a-b92f-4b86-9b30-e09ceb3362f0', 'ip': '127.0.0.1', 'request_id': '6ce95422-863a-4643-b3ce-d8f10a999071', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.427998Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'adb4a969-7b52-48dd-8bc8-dd132f2f1c15', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.428682Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '7b1e579a-b92f-4b86-9b30-e09ceb3362f0', 'ip': '127.0.0.1', 'request_id': 'adb4a969-7b52-48dd-8bc8-dd132f2f1c15', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.430648Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
___ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Reader] ____

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463847c80>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cccd730>, 'admin_client': <rest_framework.test.APIClient object at 0x79d45cc48470>, 'folder': <Folder: test>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-AUD'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:10.466083Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:10.504357Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.504528Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.506358Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mf08d7d89-73db-4b0a-8256-92932ec0cba5[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.520487Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mf08d7d89-73db-4b0a-8256-92932ec0cba5[0m [36muser_id[0m=[35m1cf25915-1da2-4b6c-8270-3923e94ad149[0m
[2m2024-08-07T14:49:10.521216Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m7d85e41f-b557-446b-b8b7-3617f758a48b[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.530479Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m7d85e41f-b557-446b-b8b7-3617f758a48b[0m [36muser_id[0m=[35m1cf25915-1da2-4b6c-8270-3923e94ad149[0m
[2m2024-08-07T14:49:10.530949Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:10.569752Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:10.569948Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.466083Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.504357Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.504528Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'f08d7d89-73db-4b0a-8256-92932ec0cba5', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.506358Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '1cf25915-1da2-4b6c-8270-3923e94ad149', 'ip': '127.0.0.1', 'request_id': 'f08d7d89-73db-4b0a-8256-92932ec0cba5', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.520487Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '7d85e41f-b557-446b-b8b7-3617f758a48b', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.521216Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '1cf25915-1da2-4b6c-8270-3923e94ad149', 'ip': '127.0.0.1', 'request_id': '7d85e41f-b557-446b-b8b7-3617f758a48b', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.530479Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.530949Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.569752Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.569948Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:10.571945Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m38e84646-26e0-4bd3-81c9-a8091b94cd8c[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.575149Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m38e84646-26e0-4bd3-81c9-a8091b94cd8c[0m [36muser_id[0m=[35m40be5f95-01f6-4daa-94b6-f6198560d685[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:10.575826Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35mc21d17ab-e680-48ea-86af-96d747d7dc4d[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.578030Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35mc21d17ab-e680-48ea-86af-96d747d7dc4d[0m [36muser_id[0m=[35m40be5f95-01f6-4daa-94b6-f6198560d685[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '38e84646-26e0-4bd3-81c9-a8091b94cd8c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.571945Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '40be5f95-01f6-4daa-94b6-f6198560d685', 'ip': '127.0.0.1', 'request_id': '38e84646-26e0-4bd3-81c9-a8091b94cd8c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.575149Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'c21d17ab-e680-48ea-86af-96d747d7dc4d', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.575826Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '40be5f95-01f6-4daa-94b6-f6198560d685', 'ip': '127.0.0.1', 'request_id': 'c21d17ab-e680-48ea-86af-96d747d7dc4d', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.578030Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Reader_outside_domain] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463847d40>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cd078f0>, 'admin_client': <rest_framework.test.APIClient ob...0x79d45cdae7b0>, 'folder': <Folder: test_outside_domain>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-AUD'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:10.613379Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:10.651184Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.651359Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.653286Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mc1a76591-0d7c-4b8c-965c-1ef4154d017b[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.668164Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mc1a76591-0d7c-4b8c-965c-1ef4154d017b[0m [36muser_id[0m=[35m6a716d13-6431-4c0d-a5f9-2b2ff68f56ff[0m
[2m2024-08-07T14:49:10.669051Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m435336c1-3624-48fb-8aab-7bda041a24a0[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.678645Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m435336c1-3624-48fb-8aab-7bda041a24a0[0m [36muser_id[0m=[35m6a716d13-6431-4c0d-a5f9-2b2ff68f56ff[0m
[2m2024-08-07T14:49:10.679537Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m46bfc8f2-7a3d-48fb-a21f-fa7830489964[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.693952Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m46bfc8f2-7a3d-48fb-a21f-fa7830489964[0m [36muser_id[0m=[35m6a716d13-6431-4c0d-a5f9-2b2ff68f56ff[0m
[2m2024-08-07T14:49:10.694650Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mb0984e29-4c31-498d-80dd-2825532e60a5[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.705325Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mb0984e29-4c31-498d-80dd-2825532e60a5[0m [36muser_id[0m=[35m6a716d13-6431-4c0d-a5f9-2b2ff68f56ff[0m
[2m2024-08-07T14:49:10.705819Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:10.746731Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:10.746923Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.613379Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.651184Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.651359Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'c1a76591-0d7c-4b8c-965c-1ef4154d017b', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.653286Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '6a716d13-6431-4c0d-a5f9-2b2ff68f56ff', 'ip': '127.0.0.1', 'request_id': 'c1a76591-0d7c-4b8c-965c-1ef4154d017b', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.668164Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '435336c1-3624-48fb-8aab-7bda041a24a0', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.669051Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '6a716d13-6431-4c0d-a5f9-2b2ff68f56ff', 'ip': '127.0.0.1', 'request_id': '435336c1-3624-48fb-8aab-7bda041a24a0', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.678645Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '46bfc8f2-7a3d-48fb-a21f-fa7830489964', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.679537Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '6a716d13-6431-4c0d-a5f9-2b2ff68f56ff', 'ip': '127.0.0.1', 'request_id': '46bfc8f2-7a3d-48fb-a21f-fa7830489964', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.693952Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'b0984e29-4c31-498d-80dd-2825532e60a5', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.694650Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '6a716d13-6431-4c0d-a5f9-2b2ff68f56ff', 'ip': '127.0.0.1', 'request_id': 'b0984e29-4c31-498d-80dd-2825532e60a5', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.705325Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.705819Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.746731Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.746923Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:10.748914Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m576d7442-d18e-41fd-a073-3861d7a90c39[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.752393Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m576d7442-d18e-41fd-a073-3861d7a90c39[0m [36muser_id[0m=[35md7a1f604-2032-4dd9-81d2-54a4a35d0666[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:10.753049Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m068a0439-3e07-432d-8696-76b36481d4f2[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.755017Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m068a0439-3e07-432d-8696-76b36481d4f2[0m [36muser_id[0m=[35md7a1f604-2032-4dd9-81d2-54a4a35d0666[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '576d7442-d18e-41fd-a073-3861d7a90c39', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.748914Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': 'd7a1f604-2032-4dd9-81d2-54a4a35d0666', 'ip': '127.0.0.1', 'request_id': '576d7442-d18e-41fd-a073-3861d7a90c39', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.752393Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '068a0439-3e07-432d-8696-76b36481d4f2', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.753049Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': 'd7a1f604-2032-4dd9-81d2-54a4a35d0666', 'ip': '127.0.0.1', 'request_id': '068a0439-3e07-432d-8696-76b36481d4f2', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.755017Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
__ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Approver] ___

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463847e00>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cf45a60>, 'admin_client': <rest_framework.test.APIClient object at 0x79d45ccc4860>, 'folder': <Folder: test>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-APP'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:10.792204Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:10.842003Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.842183Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.844088Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mde26fcad-c0d5-4ab1-ad1d-07eecfe76cce[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.858617Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mde26fcad-c0d5-4ab1-ad1d-07eecfe76cce[0m [36muser_id[0m=[35m20d1133b-3b6b-4cae-834b-3f6850ff5db7[0m
[2m2024-08-07T14:49:10.859399Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m8bfba579-c1b5-41eb-a6dd-ca7450a77d39[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.868493Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m8bfba579-c1b5-41eb-a6dd-ca7450a77d39[0m [36muser_id[0m=[35m20d1133b-3b6b-4cae-834b-3f6850ff5db7[0m
[2m2024-08-07T14:49:10.868989Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:10.903306Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:10.903483Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.792204Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.842003Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.842183Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'de26fcad-c0d5-4ab1-ad1d-07eecfe76cce', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.844088Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '20d1133b-3b6b-4cae-834b-3f6850ff5db7', 'ip': '127.0.0.1', 'request_id': 'de26fcad-c0d5-4ab1-ad1d-07eecfe76cce', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.858617Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '8bfba579-c1b5-41eb-a6dd-ca7450a77d39', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.859399Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '20d1133b-3b6b-4cae-834b-3f6850ff5db7', 'ip': '127.0.0.1', 'request_id': '8bfba579-c1b5-41eb-a6dd-ca7450a77d39', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.868493Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.868989Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.903306Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.903483Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:10.905399Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35ma8ac3f3f-fe27-4962-b3ad-c8b7956e3f0f[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.908862Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35ma8ac3f3f-fe27-4962-b3ad-c8b7956e3f0f[0m [36muser_id[0m=[35m8c91564c-ac38-4826-aa12-e16c2346be7d[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:10.909441Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m365e3e2e-a0df-4b37-b5da-4e2715ef8ad3[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:10.911400Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m365e3e2e-a0df-4b37-b5da-4e2715ef8ad3[0m [36muser_id[0m=[35m8c91564c-ac38-4826-aa12-e16c2346be7d[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'a8ac3f3f-fe27-4962-b3ad-c8b7956e3f0f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.905399Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '8c91564c-ac38-4826-aa12-e16c2346be7d', 'ip': '127.0.0.1', 'request_id': 'a8ac3f3f-fe27-4962-b3ad-c8b7956e3f0f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.908862Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '365e3e2e-a0df-4b37-b5da-4e2715ef8ad3', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.909441Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '8c91564c-ac38-4826-aa12-e16c2346be7d', 'ip': '127.0.0.1', 'request_id': '365e3e2e-a0df-4b37-b5da-4e2715ef8ad3', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.911400Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Approver_outside_domain] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463847ec0>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cd19f10>, 'admin_client': <rest_framework.test.APIClient ob...0x79d45cdae870>, 'folder': <Folder: test_outside_domain>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-APP'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:10.947550Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:10.984028Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.984201Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:10.986105Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m7d2d4439-1c56-4afc-9d57-fdc094af9220[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.000956Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m7d2d4439-1c56-4afc-9d57-fdc094af9220[0m [36muser_id[0m=[35me8bae3eb-e293-499a-b712-c0d3d1d062b4[0m
[2m2024-08-07T14:49:11.001796Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m602a0a64-7a90-4596-a666-e90a51e29aa6[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.011302Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m602a0a64-7a90-4596-a666-e90a51e29aa6[0m [36muser_id[0m=[35me8bae3eb-e293-499a-b712-c0d3d1d062b4[0m
[2m2024-08-07T14:49:11.012211Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m422cea1c-246e-4ef2-9d01-d6bc2168fd50[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.029967Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m422cea1c-246e-4ef2-9d01-d6bc2168fd50[0m [36muser_id[0m=[35me8bae3eb-e293-499a-b712-c0d3d1d062b4[0m
[2m2024-08-07T14:49:11.032684Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mbc4da904-3466-442a-868a-89de64cbdf16[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.044568Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mbc4da904-3466-442a-868a-89de64cbdf16[0m [36muser_id[0m=[35me8bae3eb-e293-499a-b712-c0d3d1d062b4[0m
[2m2024-08-07T14:49:11.045155Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:11.082508Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:11.082714Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.947550Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.984028Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.984201Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '7d2d4439-1c56-4afc-9d57-fdc094af9220', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:10.986105Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': 'e8bae3eb-e293-499a-b712-c0d3d1d062b4', 'ip': '127.0.0.1', 'request_id': '7d2d4439-1c56-4afc-9d57-fdc094af9220', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.000956Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '602a0a64-7a90-4596-a666-e90a51e29aa6', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.001796Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': 'e8bae3eb-e293-499a-b712-c0d3d1d062b4', 'ip': '127.0.0.1', 'request_id': '602a0a64-7a90-4596-a666-e90a51e29aa6', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.011302Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '422cea1c-246e-4ef2-9d01-d6bc2168fd50', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.012211Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': 'e8bae3eb-e293-499a-b712-c0d3d1d062b4', 'ip': '127.0.0.1', 'request_id': '422cea1c-246e-4ef2-9d01-d6bc2168fd50', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.029967Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'bc4da904-3466-442a-868a-89de64cbdf16', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.032684Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': 'e8bae3eb-e293-499a-b712-c0d3d1d062b4', 'ip': '127.0.0.1', 'request_id': 'bc4da904-3466-442a-868a-89de64cbdf16', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.044568Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.045155Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.082508Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.082714Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:11.084696Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m650e8656-f648-4c13-a02b-45f115b7bfe9[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.088734Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m650e8656-f648-4c13-a02b-45f115b7bfe9[0m [36muser_id[0m=[35mf9033777-ac65-4f1c-9da0-e0f781c28940[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:11.089374Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m2ae8c191-2986-4f36-884c-22e6fe77032b[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.091301Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m2ae8c191-2986-4f36-884c-22e6fe77032b[0m [36muser_id[0m=[35mf9033777-ac65-4f1c-9da0-e0f781c28940[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '650e8656-f648-4c13-a02b-45f115b7bfe9', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.084696Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': 'f9033777-ac65-4f1c-9da0-e0f781c28940', 'ip': '127.0.0.1', 'request_id': '650e8656-f648-4c13-a02b-45f115b7bfe9', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.088734Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '2ae8c191-2986-4f36-884c-22e6fe77032b', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.089374Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': 'f9033777-ac65-4f1c-9da0-e0f781c28940', 'ip': '127.0.0.1', 'request_id': '2ae8c191-2986-4f36-884c-22e6fe77032b', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.091301Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
___ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Analyst] ___

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463847fb0>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cd91190>, 'admin_client': <rest_framework.test.APIClient object at 0x79d45cfec2f0>, 'folder': <Folder: test>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-ANA'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:11.127210Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:11.168022Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:11.168198Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:11.170020Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m1a6ac622-d5af-46d1-8e51-852c2a867ed1[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.183950Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m1a6ac622-d5af-46d1-8e51-852c2a867ed1[0m [36muser_id[0m=[35m17f0892c-0518-494d-b52e-6732761fb4f7[0m
[2m2024-08-07T14:49:11.184656Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mf68c8d1b-46c1-4488-a451-c2d6e3ba0507[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.193622Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mf68c8d1b-46c1-4488-a451-c2d6e3ba0507[0m [36muser_id[0m=[35m17f0892c-0518-494d-b52e-6732761fb4f7[0m
[2m2024-08-07T14:49:11.194086Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:11.228501Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:11.228681Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.127210Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.168022Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.168198Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '1a6ac622-d5af-46d1-8e51-852c2a867ed1', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.170020Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '17f0892c-0518-494d-b52e-6732761fb4f7', 'ip': '127.0.0.1', 'request_id': '1a6ac622-d5af-46d1-8e51-852c2a867ed1', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.183950Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'f68c8d1b-46c1-4488-a451-c2d6e3ba0507', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.184656Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '17f0892c-0518-494d-b52e-6732761fb4f7', 'ip': '127.0.0.1', 'request_id': 'f68c8d1b-46c1-4488-a451-c2d6e3ba0507', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.193622Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.194086Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.228501Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.228681Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:11.230812Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m1a45876f-db41-4792-9c2a-ec1d35122088[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.234096Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m1a45876f-db41-4792-9c2a-ec1d35122088[0m [36muser_id[0m=[35m9e2bd458-50d2-45f6-885e-54968de9fe98[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:11.234680Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35mf57f2820-7a35-435f-b9e8-c44c84a55b12[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.236499Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35mf57f2820-7a35-435f-b9e8-c44c84a55b12[0m [36muser_id[0m=[35m9e2bd458-50d2-45f6-885e-54968de9fe98[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '1a45876f-db41-4792-9c2a-ec1d35122088', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.230812Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '9e2bd458-50d2-45f6-885e-54968de9fe98', 'ip': '127.0.0.1', 'request_id': '1a45876f-db41-4792-9c2a-ec1d35122088', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.234096Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'f57f2820-7a35-435f-b9e8-c44c84a55b12', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.234680Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '9e2bd458-50d2-45f6-885e-54968de9fe98', 'ip': '127.0.0.1', 'request_id': 'f57f2820-7a35-435f-b9e8-c44c84a55b12', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.236499Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Analyst_outside_domain] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d4638800e0>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cd7c3b0>, 'admin_client': <rest_framework.test.APIClient ob...0x79d45cd071a0>, 'folder': <Folder: test_outside_domain>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-ANA'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:11.273973Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:11.313867Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:11.314043Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:11.315953Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35me8b3dd5f-53c8-449d-8ec9-0470db1958cf[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.330260Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35me8b3dd5f-53c8-449d-8ec9-0470db1958cf[0m [36muser_id[0m=[35m647953b6-ecbc-4fac-8e18-e9106a25a67f[0m
[2m2024-08-07T14:49:11.331078Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35ma7bca7de-095a-493e-9b0b-7e7967826c7f[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.341173Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35ma7bca7de-095a-493e-9b0b-7e7967826c7f[0m [36muser_id[0m=[35m647953b6-ecbc-4fac-8e18-e9106a25a67f[0m
[2m2024-08-07T14:49:11.342073Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35md86c2b59-a53e-487e-9a55-1c621b215cd8[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.356942Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35md86c2b59-a53e-487e-9a55-1c621b215cd8[0m [36muser_id[0m=[35m647953b6-ecbc-4fac-8e18-e9106a25a67f[0m
[2m2024-08-07T14:49:11.357677Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35maae99763-1857-4acf-8fa5-72ced6413bf2[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.368140Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35maae99763-1857-4acf-8fa5-72ced6413bf2[0m [36muser_id[0m=[35m647953b6-ecbc-4fac-8e18-e9106a25a67f[0m
[2m2024-08-07T14:49:11.368641Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:11.405443Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:11.405610Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.273973Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.313867Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.314043Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'e8b3dd5f-53c8-449d-8ec9-0470db1958cf', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.315953Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '647953b6-ecbc-4fac-8e18-e9106a25a67f', 'ip': '127.0.0.1', 'request_id': 'e8b3dd5f-53c8-449d-8ec9-0470db1958cf', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.330260Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'a7bca7de-095a-493e-9b0b-7e7967826c7f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.331078Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '647953b6-ecbc-4fac-8e18-e9106a25a67f', 'ip': '127.0.0.1', 'request_id': 'a7bca7de-095a-493e-9b0b-7e7967826c7f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.341173Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'd86c2b59-a53e-487e-9a55-1c621b215cd8', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.342073Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '647953b6-ecbc-4fac-8e18-e9106a25a67f', 'ip': '127.0.0.1', 'request_id': 'd86c2b59-a53e-487e-9a55-1c621b215cd8', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.356942Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'aae99763-1857-4acf-8fa5-72ced6413bf2', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.357677Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '647953b6-ecbc-4fac-8e18-e9106a25a67f', 'ip': '127.0.0.1', 'request_id': 'aae99763-1857-4acf-8fa5-72ced6413bf2', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.368140Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.368641Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.405443Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.405610Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:11.407573Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35mae5388d3-9e01-4fac-b431-480280f8533c[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.411203Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35mae5388d3-9e01-4fac-b431-480280f8533c[0m [36muser_id[0m=[35m7e9f88c3-187d-46a1-bcc2-804a9338ff29[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:11.411832Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35me432b3fd-a610-427b-8888-2ba94e87194d[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.413954Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35me432b3fd-a610-427b-8888-2ba94e87194d[0m [36muser_id[0m=[35m7e9f88c3-187d-46a1-bcc2-804a9338ff29[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'ae5388d3-9e01-4fac-b431-480280f8533c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.407573Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '7e9f88c3-187d-46a1-bcc2-804a9338ff29', 'ip': '127.0.0.1', 'request_id': 'ae5388d3-9e01-4fac-b431-480280f8533c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.411203Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'e432b3fd-a610-427b-8888-2ba94e87194d', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.411832Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '7e9f88c3-187d-46a1-bcc2-804a9338ff29', 'ip': '127.0.0.1', 'request_id': 'e432b3fd-a610-427b-8888-2ba94e87194d', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.413954Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Domain_Manager] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d4638801a0>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cc48260>, 'admin_client': <rest_framework.test.APIClient object at 0x79d45cf843e0>, 'folder': <Folder: test>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-DMA'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:11.449549Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:11.494889Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:11.495054Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:11.497037Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35me0fcffd5-d86f-4bbd-ae52-1811028398d4[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.512196Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35me0fcffd5-d86f-4bbd-ae52-1811028398d4[0m [36muser_id[0m=[35mb4785279-5053-417d-b99c-b9baf0526d47[0m
[2m2024-08-07T14:49:11.513281Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35ma7bbc5c8-6599-4355-90d1-f6288f7ded3d[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.523462Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35ma7bbc5c8-6599-4355-90d1-f6288f7ded3d[0m [36muser_id[0m=[35mb4785279-5053-417d-b99c-b9baf0526d47[0m
[2m2024-08-07T14:49:11.524018Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:11.563575Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:11.563755Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.449549Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.494889Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.495054Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'e0fcffd5-d86f-4bbd-ae52-1811028398d4', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.497037Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': 'b4785279-5053-417d-b99c-b9baf0526d47', 'ip': '127.0.0.1', 'request_id': 'e0fcffd5-d86f-4bbd-ae52-1811028398d4', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.512196Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'a7bbc5c8-6599-4355-90d1-f6288f7ded3d', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.513281Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': 'b4785279-5053-417d-b99c-b9baf0526d47', 'ip': '127.0.0.1', 'request_id': 'a7bbc5c8-6599-4355-90d1-f6288f7ded3d', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.523462Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.524018Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.563575Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.563755Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:11.565686Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m3083ae91-6840-46f4-9463-9e7394d8096c[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.569100Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35m3083ae91-6840-46f4-9463-9e7394d8096c[0m [36muser_id[0m=[35m38ce2f67-2aaf-4fa9-85ff-46bfe073bb0b[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:11.569681Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m3bfc5e3b-57e5-401e-8abd-d2bb82c7a899[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.571637Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m3bfc5e3b-57e5-401e-8abd-d2bb82c7a899[0m [36muser_id[0m=[35m38ce2f67-2aaf-4fa9-85ff-46bfe073bb0b[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '3083ae91-6840-46f4-9463-9e7394d8096c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.565686Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '38ce2f67-2aaf-4fa9-85ff-46bfe073bb0b', 'ip': '127.0.0.1', 'request_id': '3083ae91-6840-46f4-9463-9e7394d8096c', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.569100Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '3bfc5e3b-57e5-401e-8abd-d2bb82c7a899', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.569681Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '38ce2f67-2aaf-4fa9-85ff-46bfe073bb0b', 'ip': '127.0.0.1', 'request_id': '3bfc5e3b-57e5-401e-8abd-d2bb82c7a899', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.571637Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
_ TestRequirementNodesAuthenticated.test_import_requirement_nodes[Domain_Manager_outside_domain] _

self = <test_api_requirement_nodes.TestRequirementNodesAuthenticated object at 0x79d463880260>
test = {'client': <rest_framework.test.APIClient object at 0x79d45cd080b0>, 'admin_client': <rest_framework.test.APIClient ob...0x79d45cc4ac00>, 'folder': <Folder: test_outside_domain>, 'assigned_folder': <Folder: test>, 'user_group': 'BI-UG-DMA'}

    def test_import_requirement_nodes(self, test):
        """test that the requirements values imported from a library are correct"""
        EndpointTestsQueries.Auth.import_object(
            test.client, "Framework", user_group=test.user_group
        )
>       EndpointTestsQueries.Auth.compare_results(
            test.client,
            "Requirement nodes",
            EndpointTestsUtils.get_endpoint_url("Requirement nodes"),
            EndpointTestsUtils.get_stored_library_content(
                test.client, TEST_FRAMEWORK_URN
            ),
            [
                "name",
                "description",
                "urn",
                "parent_urn",
            ],
        )

app_tests/api/test_api_requirement_nodes.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
app_tests/api/test_utils.py:1030: in compare_results
    content = json.loads(content)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

s = {'framework': {'description': 'NIST Cybersecurity Framework', 'max_score': 4, 'min_score': 1, 'name': 'NIST CSF v1.1', ...}}
cls = None, object_hook = None, parse_float = None, parse_int = None
parse_constant = None, object_pairs_hook = None, kw = {}

    def loads(s, *, cls=None, object_hook=None, parse_float=None,
            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):
        """Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
        containing a JSON document) to a Python object.
    
        ``object_hook`` is an optional function that will be called with the
        result of any object literal decode (a ``dict``). The return value of
        ``object_hook`` will be used instead of the ``dict``. This feature
        can be used to implement custom decoders (e.g. JSON-RPC class hinting).
    
        ``object_pairs_hook`` is an optional function that will be called with the
        result of any object literal decoded with an ordered list of pairs.  The
        return value of ``object_pairs_hook`` will be used instead of the ``dict``.
        This feature can be used to implement custom decoders.  If ``object_hook``
        is also defined, the ``object_pairs_hook`` takes priority.
    
        ``parse_float``, if specified, will be called with the string
        of every JSON float to be decoded. By default this is equivalent to
        float(num_str). This can be used to use another datatype or parser
        for JSON floats (e.g. decimal.Decimal).
    
        ``parse_int``, if specified, will be called with the string
        of every JSON int to be decoded. By default this is equivalent to
        int(num_str). This can be used to use another datatype or parser
        for JSON integers (e.g. float).
    
        ``parse_constant``, if specified, will be called with one of the
        following strings: -Infinity, Infinity, NaN.
        This can be used to raise an exception if invalid JSON numbers
        are encountered.
    
        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``
        kwarg; otherwise ``JSONDecoder`` is used.
        """
        if isinstance(s, str):
            if s.startswith('\ufeff'):
                raise JSONDecodeError("Unexpected UTF-8 BOM (decode using utf-8-sig)",
                                      s, 0)
        else:
            if not isinstance(s, (bytes, bytearray)):
>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '
                                f'not {s.__class__.__name__}')
E               TypeError: the JSON object must be str, bytes or bytearray, not dict

/usr/lib/python3.12/json/__init__.py:339: TypeError
---------------------------- Captured stdout setup -----------------------------
startup handler: initialize database
---------------------------- Captured stderr setup -----------------------------
[2m2024-08-07T14:49:11.608813Z[0m [[32m[1minfo     [0m] [1mcreating superuser            [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35madmin@tests.com[0m
[2m2024-08-07T14:49:11.646936Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:11.647107Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: admin@tests.com>[0m
[2m2024-08-07T14:49:11.648938Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m4fa0a797-29bb-4605-ac7c-4b3e8d24a686[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.662789Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35m4fa0a797-29bb-4605-ac7c-4b3e8d24a686[0m [36muser_id[0m=[35m23210c19-350f-4937-85e0-837a87335692[0m
[2m2024-08-07T14:49:11.663547Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m6859fddd-cdb5-4f03-b2d7-f4230facdb72[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.673073Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35m6859fddd-cdb5-4f03-b2d7-f4230facdb72[0m [36muser_id[0m=[35m23210c19-350f-4937-85e0-837a87335692[0m
[2m2024-08-07T14:49:11.673954Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mc07bc3ef-1d25-4402-98fb-bb86abbaff83[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.688032Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m201[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mPOST /api/folders/[0m [36mrequest_id[0m=[35mc07bc3ef-1d25-4402-98fb-bb86abbaff83[0m [36muser_id[0m=[35m23210c19-350f-4937-85e0-837a87335692[0m
[2m2024-08-07T14:49:11.688773Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mf5ebf4cf-f14e-441d-8321-78da588df0ac[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.699193Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/folders/[0m [36mrequest_id[0m=[35mf5ebf4cf-f14e-441d-8321-78da588df0ac[0m [36muser_id[0m=[35m23210c19-350f-4937-85e0-837a87335692[0m
[2m2024-08-07T14:49:11.699694Z[0m [[32m[1minfo     [0m] [1mcreating user                 [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36memail[0m=[35muser@tests.com[0m
[2m2024-08-07T14:49:11.741829Z[0m [[32m[1minfo     [0m] [1muser saved                    [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
[2m2024-08-07T14:49:11.742001Z[0m [[32m[1minfo     [0m] [1muser created sucessfully      [0m [[0m[1m[34miam.models[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36muser[0m=[35m<User: user@tests.com>[0m
------------------------------ Captured log setup ------------------------------
INFO     iam.models:models.py:270 {'email': 'admin@tests.com', 'event': 'creating superuser', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.608813Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: admin@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.646936Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: admin@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.647107Z', 'logger': 'iam.models', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '4fa0a797-29bb-4605-ac7c-4b3e8d24a686', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.648938Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '23210c19-350f-4937-85e0-837a87335692', 'ip': '127.0.0.1', 'request_id': '4fa0a797-29bb-4605-ac7c-4b3e8d24a686', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.662789Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '6859fddd-cdb5-4f03-b2d7-f4230facdb72', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.663547Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '23210c19-350f-4937-85e0-837a87335692', 'ip': '127.0.0.1', 'request_id': '6859fddd-cdb5-4f03-b2d7-f4230facdb72', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.673073Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'POST /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'c07bc3ef-1d25-4402-98fb-bb86abbaff83', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.673954Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 201, 'request': 'POST /api/folders/', 'event': 'request_finished', 'user_id': '23210c19-350f-4937-85e0-837a87335692', 'ip': '127.0.0.1', 'request_id': 'c07bc3ef-1d25-4402-98fb-bb86abbaff83', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.688032Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/folders/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'f5ebf4cf-f14e-441d-8321-78da588df0ac', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.688773Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/folders/', 'event': 'request_finished', 'user_id': '23210c19-350f-4937-85e0-837a87335692', 'ip': '127.0.0.1', 'request_id': 'f5ebf4cf-f14e-441d-8321-78da588df0ac', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.699193Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     iam.models:models.py:263 {'email': 'user@tests.com', 'event': 'creating user', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.699694Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:346 {'user': <User: user@tests.com>, 'event': 'user saved', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.741829Z', 'logger': 'iam.models', 'level': 'info'}
INFO     iam.models:models.py:249 {'user': <User: user@tests.com>, 'event': 'user created sucessfully', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.742001Z', 'logger': 'iam.models', 'level': 'info'}
----------------------------- Captured stderr call -----------------------------
[2m2024-08-07T14:49:11.743977Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35ma7f92cfb-dad3-44d6-bd4f-1449b83cd36f[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.747477Z[0m [[33m[1mwarning  [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m403[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m [36mrequest_id[0m=[35ma7f92cfb-dad3-44d6-bd4f-1449b83cd36f[0m [36muser_id[0m=[35m72337495-4a4c-4c56-8202-8a513bd2bb36[0m
[1mForbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/[0m
[2m2024-08-07T14:49:11.748073Z[0m [[32m[1minfo     [0m] [1mrequest_started               [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m6a6794eb-56ba-44ac-8462-c634eb78c4b7[0m [36muser_agent[0m=[35mNone[0m [36muser_id[0m=[35mNone[0m
[2m2024-08-07T14:49:11.750525Z[0m [[32m[1minfo     [0m] [1mrequest_finished              [0m [[0m[1m[34mdjango_structlog.middlewares.request[0m][0m [36mciso_assistant_url[0m=[35mhttp://localhost:5173[0m [36mcode[0m=[35m200[0m [36mip[0m=[35m127.0.0.1[0m [36mrequest[0m=[35mGET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/[0m [36mrequest_id[0m=[35m6a6794eb-56ba-44ac-8462-c634eb78c4b7[0m [36muser_id[0m=[35m72337495-4a4c-4c56-8202-8a513bd2bb36[0m
------------------------------ Captured log call -------------------------------
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': 'a7f92cfb-dad3-44d6-bd4f-1449b83cd36f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.743977Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
WARNING  django_structlog.middlewares.request:request.py:109 {'code': 403, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/', 'event': 'request_finished', 'user_id': '72337495-4a4c-4c56-8202-8a513bd2bb36', 'ip': '127.0.0.1', 'request_id': 'a7f92cfb-dad3-44d6-bd4f-1449b83cd36f', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.747477Z', 'logger': 'django_structlog.middlewares.request', 'level': 'warning'}
WARNING  django.request:log.py:241 Forbidden: /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/import/
INFO     django_structlog.middlewares.request:request.py:161 {'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'user_agent': None, 'event': 'request_started', 'user_id': None, 'ip': '127.0.0.1', 'request_id': '6a6794eb-56ba-44ac-8462-c634eb78c4b7', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.748073Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
INFO     django_structlog.middlewares.request:request.py:109 {'code': 200, 'request': 'GET /api/stored-libraries/urn:intuitem:risk:library:nist-csf-1.1/content/', 'event': 'request_finished', 'user_id': '72337495-4a4c-4c56-8202-8a513bd2bb36', 'ip': '127.0.0.1', 'request_id': '6a6794eb-56ba-44ac-8462-c634eb78c4b7', 'ciso_assistant_url': 'http://localhost:5173', 'timestamp': '2024-08-07T14:49:11.750525Z', 'logger': 'django_structlog.middlewares.request', 'level': 'info'}
=========================== short test summary info ============================
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Global_administrator]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Global_administrator_outside_domain]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Global_reader]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Global_reader_outside_domain]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Global_approver]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Global_approver_outside_domain]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Reader]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Reader_outside_domain]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Approver]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Approver_outside_domain]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Analyst]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Analyst_outside_domain]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Domain_Manager]
FAILED app_tests/api/test_api_requirement_nodes.py::TestRequirementNodesAuthenticated::test_import_requirement_nodes[Domain_Manager_outside_domain]
======================== 14 failed, 15 passed in 59.22s ========================
